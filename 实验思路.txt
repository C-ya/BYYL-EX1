测试文件：test(1-5).txt
输出文件：outtest.txt

全局变量：基本字数组Tag[]，判断该行语句是否为定义标识符语句；标识符数组Tags[]字符数组，用于存放标识符；计数数组Count[]，存放相应标识符出现次数；语句字符数组str[]，存放文件每行内容和各种操作。
//以此判断是否为定义标识符语句 
.string Tag[3] = {"var", "const", "procedure"}; 
//标识符数组 
string Tags[1024] = {""};                      
//语句存放数组  
string str[1024] = {""};                       
//计数数组  
int Count[1024] = {0};  

读取文件函数：按行读取指定测试文件，将字母全部转换为小写，并去掉首尾空格和注释行，返回文件有效行数。
int rFile(char file[]);

清除函数：清除文件中每行出现的特殊符号和尾部空格，留下有效字符，如字母，数字和隔断空格。
void Clear(string str[], int len);

裁剪函数：将每行字符串按空格分割，存入head数组，并根据第一个字符串判断该行是否为定于语句，如是则将后续非数字开头的字符串存入标识符存储数组Tags[]，计数数组Count[]相应位置加一，否则逐个判断是否为已定义的标识符，如是则Count[]相应位置加一，返回标识符个数num。
int Cut(string str[], int len);

写操作函数：将结果按输出格式存入结果文件outtest.txt文件中。
void pFile(int num);

初始化函数：执行过一次读写操作后将数组清空。
void init(int len, int num);

操作函数：执行如上步骤完成读写操作。
void Exe(char file[]);

主函数：通过输入指定数组测试对应文件。